name: Download and Release APKs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release-apks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Puppeteer
      run: |
        npm install puppeteer

    - name: Download the XAPK file using Puppeteer
      run: |
        node -e "
        const fs = require('fs');
        const puppeteer = require('puppeteer');
        const https = require('https');
        const path = require('path');

        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();
          await page.goto('https://d.apkpure.com/b/XAPK/com.roblox.client?version=latest');
          setTimeout(function(){
            
          }, 5000);

          const downloadLink = await page.evaluate(() => {
            return document.querySelector('a[href*="https://download.apkpure.com"]').href;
          });

          console.log('Download link:', downloadLink);
          const file = fs.createWriteStream(path.join(__dirname, 'downloaded_file.xapk'));

          https.get(downloadLink, (response) => {
            response.pipe(file);
            file.on('finish', () => {
              file.close(() => {
                console.log('Download completed and saved as downloaded_file.xapk');
              });
            });
          }).on('error', (err) => {
            fs.unlink(path.join(__dirname, 'downloaded_file.xapk')); // Delete the file on error
            console.error('Error downloading the file:', err.message);
          });
          await browser.close();
        })();
        "

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip

    - name: Unpack the downloaded file
      run: |
        mkdir unpacked
        unzip downloaded_file.xapk -d unpacked

    - name: Find APK files
      id: find_apks
      run: |
        apk_files=$(find unpacked -type f -name "*.apk")
        echo "APK_FILES=$apk_files" >> $GITHUB_ENV

    - name: Create a GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload APK files
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.APK_FILES }}
        asset_name: $(basename ${{ env.APK_FILES }})
        asset_content_type: application/vnd.android.package-archive
